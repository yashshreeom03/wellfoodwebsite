import { executeAsync } from "D:/2025-04-04/wellfoodwebsite/node_modules/unctx/dist/index.mjs";
import { createError, showError } from "../../app/composables/error.mjs";
import { useNuxtApp } from "../../app/nuxt.mjs";
import { defineNuxtRouteMiddleware, useRouter } from "../../app/composables/router.mjs";
const validate = defineNuxtRouteMiddleware(async (to) => {
  var _a;
  let __temp, __restore;
  if (!((_a = to.meta) == null ? void 0 : _a.validate)) {
    return;
  }
  const nuxtApp = useNuxtApp();
  const router = useRouter();
  const result = ([__temp, __restore] = executeAsync(() => Promise.resolve(to.meta.validate(to))), __temp = await __temp, __restore(), __temp);
  if (result === true) {
    return;
  }
  const error = createError({
    statusCode: result && result.statusCode || 404,
    statusMessage: result && result.statusMessage || `Page Not Found: ${to.fullPath}`,
    data: {
      path: to.fullPath
    }
  });
  const unsub = router.beforeResolve((final) => {
    unsub();
    if (final === to) {
      const unsub2 = router.afterEach(async () => {
        unsub2();
        await nuxtApp.runWithContext(() => showError(error));
      });
      return false;
    }
  });
});
export {
  validate as default
};
//# sourceMappingURL=validate.mjs.map
