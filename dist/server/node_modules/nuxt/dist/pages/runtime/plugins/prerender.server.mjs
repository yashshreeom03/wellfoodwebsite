import { executeAsync } from "D:/2025-04-04/wellfoodwebsite/node_modules/unctx/dist/index.mjs";
import { joinURL } from "D:/2025-04-04/wellfoodwebsite/node_modules/ufo/dist/index.mjs";
import "D:/2025-04-04/wellfoodwebsite/node_modules/defu/dist/defu.mjs";
import { defineNuxtPlugin, useRuntimeConfig } from "../../../app/nuxt.mjs";
import { prerenderRoutes } from "../../../app/composables/ssr.mjs";
import _routes from "../../../../../../_virtual/virtual_nuxt_D__2025-04-04_wellfoodwebsite_.nuxt_routes.mjs";
import routerOptions, { hashMode } from "../../../../../../_virtual/virtual_nuxt_D__2025-04-04_wellfoodwebsite_.nuxt_router.options.mjs";
let routes;
const prerender_server_sqIxOBipVr4FbVMA9kqWL0wT8FPop6sKAXLVfifsJzk = defineNuxtPlugin(async () => {
  let __temp, __restore;
  if (!import.meta.prerender || hashMode) {
    return;
  }
  if (routes && !routes.length) {
    return;
  }
  useRuntimeConfig().nitro.routeRules;
  routes || (routes = Array.from(processRoutes(([__temp, __restore] = executeAsync(() => {
    var _a, _b;
    return (_b = (_a = routerOptions).routes) == null ? void 0 : _b.call(_a, _routes);
  }), __temp = await __temp, __restore(), __temp) ?? _routes)));
  const batch = routes.splice(0, 10);
  prerenderRoutes(batch);
});
const OPTIONAL_PARAM_RE = /^\/?:.*(?:\?|\(\.\*\)\*)$/;
function shouldPrerender(path) {
  return true;
}
function processRoutes(routes2, currentPath = "/", routesToPrerender = /* @__PURE__ */ new Set()) {
  var _a;
  for (const route of routes2) {
    if (OPTIONAL_PARAM_RE.test(route.path) && !((_a = route.children) == null ? void 0 : _a.length) && shouldPrerender()) {
      routesToPrerender.add(currentPath);
    }
    if (route.path.includes(":")) {
      continue;
    }
    const fullPath = joinURL(currentPath, route.path);
    {
      routesToPrerender.add(fullPath);
    }
    if (route.children) {
      processRoutes(route.children, fullPath, routesToPrerender);
    }
  }
  return routesToPrerender;
}
export {
  prerender_server_sqIxOBipVr4FbVMA9kqWL0wT8FPop6sKAXLVfifsJzk as default
};
//# sourceMappingURL=prerender.server.mjs.map
