{"version":3,"file":"Counter.vue2.mjs","sources":["../../../../components/Counter.vue"],"sourcesContent":["<template>\n    <div :class=\"`text-center ${extraClass}`\">\n      <h3 ref=\"countRef\" :data-stop=\"parsedValue\" class=\"text-[55px] font-bold leading-[70px] text-primarycolor\">\n        0\n      </h3>\n      <p class=\"font-medium text-black mt-2\">{{ displayLabel }}</p>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted, computed } from 'vue';\n\ninterface Props {\n  value: number | string; \n  label?: string;\n  extraClass?: string;\n}\n\nconst props = defineProps<Props>();\n\nconst parsedValue = computed(() => {\n  return typeof props.value === \"number\" ? props.value : Number(props.value);\n});\n\nconst countRef = ref<HTMLElement | null>(null);\n\nconst displayLabel = computed(() => props.label || \"Default Label\");\n\nconst formatNumber = (num: number): string => {\n  return num >= 1000 ? `${Math.floor(num / 1000)}K+` : `${num}+`;\n};\n\nonMounted(() => {\n  if (!countRef.value) return;\n\n  const observer = new IntersectionObserver(\n    (entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          const end = parsedValue.value; \n          const duration = 1000;\n          const steps = 30; \n          const increment = Math.ceil(end / steps);\n          let current = 0;\n\n          const updateCounter = () => {\n            current += increment;\n            if (current >= end) {\n              current = end;\n            }\n            if (countRef.value) {\n              countRef.value.innerText = formatNumber(current);\n            }\n            if (current < end) {\n              setTimeout(updateCounter, duration / steps);\n            }\n          };\n\n          updateCounter();\n          observer.unobserve(entry.target);\n        }\n      });\n    },\n    { threshold: 0.5 }\n  );\n\n  observer.observe(countRef.value);\n\n  onUnmounted(() => {\n    if (countRef.value) {\n      observer.unobserve(countRef.value);\n    }\n  });\n});\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;AAkBA,UAAM,QAAQ;AAER,UAAA,cAAc,SAAS,MAAM;AAC1B,aAAA,OAAO,MAAM,UAAU,WAAW,MAAM,QAAQ,OAAO,MAAM,KAAK;AAAA,IAAA,CAC1E;AAEgB,QAAwB,IAAI;AAE7C,UAAM,eAAe,SAAS,MAAM,MAAM,SAAS,eAAe;;;;;;;;"}